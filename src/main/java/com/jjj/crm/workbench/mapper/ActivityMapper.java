package com.jjj.crm.workbench.mapper;

import com.jjj.crm.workbench.pojo.Activity;
import com.jjj.crm.workbench.pojo.ActivityExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;
import org.springframework.lang.Nullable;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    int countByExample(ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    int deleteByExample(ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    List<Activity> selectByExample(ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    int updateByExampleSelective(@Param("record") Activity record, @Param("example") ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    int updateByExample(@Param("record") Activity record, @Param("example") ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Oct 02 21:41:33 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Suns Oct 02 21:41:33 CST 2022
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 多表条件查询
     * @param condition 条件查询所需要的条件
     * @return 返回根据条件查询所对应的全部结果
     */
    List<Activity> unionSelectByExample(Activity condition);

    /**
     * 批量删除数据
     * @param ids 待删除的id数组
     * @return 影响行数
     */
    int batchDeleteByIds(String[] ids);

    /**
     * 根据多个id查询
     * @param ids 需要被查询的数据
     * @return 对应的实体类对象
     */
    List<Activity> batchSelectByPrimaryKey(@Nullable String[] ids);

    /**
     * 批量插入市场活动
     * @param activities 市场活动列表
     * @return
     */
    int batchInsertActivities(List<Activity> activities);

    /**
     * 查询某个市场活动的详细信息
     * @param id
     * @return
     */
    Activity selectForDetail(String id);

    /**
     * 根据clueId查询对应的市场活动
     * @param clueId
     * @return
     */
    List<Activity> selectActivityByClueId(String clueId);

    /**
     * 查询未被线索联系的市场活动
     * @param clueId 线索id
     * @param name 模糊查询的字段
     * @return
     */
    List<Activity> selectUnboundedActivityByName(@Param("clueId") String clueId, @Param("name") String name);

    /**
     * 查询关联线索过的市场活动
     * @param clueId 线索id
     * @param name 模糊查询的字段
     * @return
     */
    List<Activity> selectBoundedActivityByName(@Param("clueId") String clueId, @Param("name") String name);
}